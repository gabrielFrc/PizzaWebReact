{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\gabri\\\\Documents\\\\GitHub\\\\PizzaPage\\\\my-app\\\\src\\\\components\\\\navigation\\\\index.js\",\n  _s = $RefreshSig$();\nimport { useState } from 'react';\nimport './index.css';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Navigation = () => {\n  _s();\n  let [blur, setBlur] = useState(false);\n  const cuo = () => {\n    setBlur(!blur);\n    if (blur) {\n      document.body.classList.add('blur-all');\n    } else {\n      document.body.classList.remove('blur-all');\n    }\n  };\n  let navigate = useNavigate();\n  const bla = id => {\n    navigate(`${id}`);\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"header\", {\n      children: /*#__PURE__*/_jsxDEV(\"nav\", {\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          className: \"logo-img\",\n          src: \"/navigation-images/logo.png\",\n          alt: \"Site Logo\",\n          onClick: () => bla('/')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"create-button\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => {\n              bla('/login');\n            },\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                src: \"/navigation-images/user-profile-icon.png\",\n                alt: \"User Icon\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 33,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: \"Fazer Login\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 34,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 32,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 28,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                src: \"/navigation-images/user-profile-icon.png\",\n                alt: \"User Icon\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 39,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: \"Criar Conta\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 40,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 38,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n_s(Navigation, \"0wgP80f93CDufxEYDJl++GsiVsc=\", false, function () {\n  return [useNavigate];\n});\n_c = Navigation;\nexport default Navigation;\nvar _c;\n$RefreshReg$(_c, \"Navigation\");","map":{"version":3,"names":["useState","useNavigate","jsxDEV","_jsxDEV","Fragment","_Fragment","Navigation","_s","blur","setBlur","cuo","document","body","classList","add","remove","navigate","bla","id","children","className","src","alt","onClick","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/gabri/Documents/GitHub/PizzaPage/my-app/src/components/navigation/index.js"],"sourcesContent":["import { useState } from 'react';\r\nimport './index.css';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nconst Navigation = () => {\r\n    let [blur, setBlur] = useState(false);\r\n    const cuo = () => {\r\n        setBlur(!blur)\r\n        if(blur){\r\n            document.body.classList.add('blur-all');\r\n        }\r\n        else{\r\n            document.body.classList.remove('blur-all');\r\n        }\r\n    }\r\n\r\n    let navigate = useNavigate();\r\n    const bla = (id) => {\r\n        navigate(`${id}`);\r\n    }\r\n    \r\n    return(\r\n        <>\r\n            <header>\r\n                <nav>\r\n                    <img className='logo-img' src='/navigation-images/logo.png' alt='Site Logo' onClick={() => bla('/')}></img>\r\n                    <div className='create-button'>\r\n                        <button onClick={() => {\r\n                            bla('/login');\r\n\r\n                        }}>\r\n                            <div>\r\n                                <img src='/navigation-images/user-profile-icon.png' alt='User Icon'></img>\r\n                                <p>Fazer Login</p>\r\n                            </div>\r\n                        </button>\r\n                        <button>\r\n                            <div>\r\n                                <img src='/navigation-images/user-profile-icon.png' alt='User Icon'></img>\r\n                                <p>Criar Conta</p>\r\n                            </div>\r\n                        </button>\r\n                    </div>\r\n                </nav>\r\n            </header>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Navigation;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}